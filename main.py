def number_to_words(n):
    # Словари для преобразования чисел
    units = {
        0: 'ноль',
        1: 'один',
        2: 'два',
        3: 'три',
        4: 'четыре',
        5: 'пять',
        6: 'шесть',
        7: 'семь',
        8: 'восемь',
        9: 'девять'
    }
    tens = {
        10: 'десять',
        11: 'одиннадцать',
        12: 'двенадцать',
        13: 'тринадцать',
        14: 'четырнадцать',
        15: 'пятнадцать',
        16: 'шестнадцать',
        17: 'семнадцать',
        18: 'восемнадцать',
        19: 'девятнадцать'
    }
    dozens = {
        2: 'двадцать',
        3: 'тридцать',
        4: 'сорок',
        5: 'пятьдесят',
        6: 'шестьдесят',
        7: 'семьдесят',
        8: 'восемьдесят',
        9: 'девяносто'
    }
    hundreds = {
        1: 'сто',
        2: 'двести',
        3: 'триста',
        4: 'четыреста',
        5: 'пятьсот',
        6: 'шестьсот',
        7: 'семьсот',
        8: 'восемьсот',
        9: 'девятьсот'
    }
    thousands = {
        1: 'тысяча',
        2: 'две тысячи',
        3: 'три тысячи',
        4: 'четыре тысячи',
        5: 'пять тысяч',
        6: 'шесть тысяч',
        7: 'семь тысяч',
        8: 'восемь тысяч',
        9: 'девять тысяч'
    }

    # Если число от 0 до 9, возвращаем его словесное представление
    if n >= 0 and n <= 9:
        return units[n]
    # Если число от 10 до 19, возвращаем его словесное представление
    elif n >= 10 and n <= 19:
        return tens[n]
    # Если число от 20 до 99, рекурсивно вызываем функцию для десятков и единиц, объединяем результаты
    elif n >= 20 and n <= 99:
        return dozens[n // 10] + ' ' + number_to_words(n % 10)
    # Если число от 100 до 999, рекурсивно вызываем функцию для сотен, десятков и единиц, объединяем результаты
    elif n >= 100 and n <= 999:
        return hundreds[n // 100] + ' ' + number_to_words(n % 100)
    # Если число от 1000 до 9999, рекурсивно вызываем функцию для тысяч, сотен, десятков и единиц, объединяем результаты
    elif n >= 1000 and n <= 9999:
        return thousands[n // 1000] + ' ' + number_to_words(n % 1000)
    # Если число от 10000 до 99999, рекурсивно вызываем функцию для десятков тысяч, тысяч, сотен, десятков и единиц, объединяем результаты
    elif n >= 10000 and n <= 99999:
        return dozens[n // 10000] + ' ' + thousands[n // 1000 % 10] + ' ' + number_to_words(n % 1000)
    # Если число от 100000 до 999999, рекурсивно вызываем функцию для сотен тысяч, десятков тысяч, тысяч, сотен, десятков и единиц, объединяем результаты
    elif n >= 100000 and n <= 999999:
        return hundreds[n // 100000] + ' ' + dozens[n // 10000 % 10] + ' ' + thousands[
            n // 1000 % 10] + ' ' + number_to_words(n % 1000)
    else:
        return 'Число вне допустимого диапазона'

a = int(input('Введите собственное число для тестирования(от 0 до 999999):'))
# Пример использования

print(number_to_words(a))
print(number_to_words(123))  # выводит "сто двадцать три"
print(number_to_words(42))  # выводит "сорок два"
print(number_to_words(3563))  #
print(number_to_words(64364))
print(number_to_words(156756))